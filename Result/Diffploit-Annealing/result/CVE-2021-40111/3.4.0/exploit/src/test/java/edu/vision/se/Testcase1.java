package edu.vision.se;

import static org.assertj.core.api.Assertions.assertThatThrownBy;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.Base64;

import org.apache.james.protocols.imap.DecodingException;
import org.apache.james.imap.decode.ImapRequestStreamLineReader;
import org.apache.james.imap.decode.parser.StatusCommandParser;
import org.apache.james.imap.encode.FakeImapSession;
import org.apache.james.imap.message.response.UnpooledStatusResponseFactory;
import org.junit.Test;
import org.apache.james.imap.api.ImapCommand;
import org.apache.james.imap.api.ImapMessage;
import org.apache.james.imap.api.process.ImapSession;
import org.apache.james.imap.decode.ImapRequestLineReader;

import java.nio.charset.StandardCharsets;


public class Testcase1 {
    @Test(timeout = 10000)
    public void fuzzingInputShouldNotLeadToOutOfMemoryException() {
        String base64Input = "MiAgKH8MSU4kQiBOJEIgICMAf15Df39/f39/f39/f39/f39/f39/f39/f0NDRTogP19GbT8JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCT0NAAAAAAAAAD0/TkNPAAAAAAhlAAAAAAA=";
        byte[] bytes = Base64.getDecoder().decode(base64Input);


        assertThatThrownBy(() -> new StatusCommandParserChild()
                .decode(new ImapRequestStreamLineReader(new ByteArrayInputStream(bytes),
                        new ByteArrayOutputStream()), ImapCommand.anyStateCommand("AEA"), new FakeImapSession()))
                .isInstanceOf(DecodingException.class);
    }
}

class StatusCommandParserChild extends StatusCommandParser {
    public StatusCommandParserChild() {
        super();
    }

    public void decode(ImapRequestStreamLineReader request, ImapCommand command, ImapSession session) throws DecodingException {
        super.decode(command, request, "TAG", session);
    }
}
