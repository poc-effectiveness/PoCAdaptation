package edu.vision.se;

import static org.assertj.core.api.Assertions.assertThatThrownBy;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.Base64;

import org.apache.james.imap.api.ImapCommand;
import org.apache.james.imap.api.ImapMessage;
import org.apache.james.imap.decode.ImapRequestLineReader;
import org.apache.james.imap.decode.ImapRequestStreamLineReader;
import org.apache.james.imap.decode.parser.StatusCommandParser;
import org.apache.james.imap.message.response.UnpooledStatusResponseFactory;
import org.junit.Test;
import org.apache.james.protocols.imap.DecodingException;

import java.nio.charset.StandardCharsets;


public class Testcase1 {
    @Test(timeout = 1000)
    public void fuzzingInputShouldNotLeadToOutOfMemoryException() throws DecodingException {
        String base64Input = "MiAgKH8MSU4kQiBOJEIgICMAf15Df39/f39/f39/f39/f39/f39/f39/f0NDRTogP19GbT8JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCT0NAAAAAAAAAD0/TkNPAAAAAAhlAAAAAAA=";
        byte[] bytes = Base64.getDecoder().decode(base64Input);

        assertThatThrownBy(() -> new StatusCommandParserChild(new UnpooledStatusResponseFactory())
                .decode(ImapCommand.anyStateCommand("STATUS"), 
                        new ImapRequestStreamLineReader(new ByteArrayInputStream(bytes),
                        new ByteArrayOutputStream()), "AEA", new FakeImapSession()))
                .isInstanceOf(DecodingException.class);
    }
}

class StatusCommandParserChild extends StatusCommandParser {
    public StatusCommandParserChild(UnpooledStatusResponseFactory responseFactory) {
        super(responseFactory);
    }

    public ImapMessage decode(ImapCommand command, ImapRequestLineReader request, String tag, FakeImapSession session) throws DecodingException {
        return super.decode(command, request, tag, session);
    }
}
