package edu.vision.se;

import static org.junit.Assert.assertNull;

import org.apache.dolphinscheduler.common.utils.HttpUtils;
import org.junit.Test;

public class Testcase1 {

    static {
        System.setProperty("https.protocols", "TLSv1,TLSv1.1,TLSv1.2");
        // Disable SSL certificate validation
        javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(
            (hostname, session) -> true);
        try {
            javax.net.ssl.TrustManager[] trustAllCerts = new javax.net.ssl.TrustManager[]{
                new javax.net.ssl.X509TrustManager() {
                    public java.security.cert.X509Certificate[] getAcceptedIssuers() {
                        return null;
                    }
                    public void checkClientTrusted(
                        java.security.cert.X509Certificate[] certs, String authType) {
                    }
                    public void checkServerTrusted(
                        java.security.cert.X509Certificate[] certs, String authType) {
                    }
                }
            };
            javax.net.ssl.SSLContext sc = javax.net.ssl.SSLContext.getInstance("SSL");
            sc.init(null, trustAllCerts, new java.security.SecureRandom());
            javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testGetInvalidRequest() {
        // test invalid certification HTTPS URL
        String response2 = HttpUtils.get("http://example.com");
        validateReturnValue(response2);
    }

    public void validateReturnValue(String result) {
        assertNull("Response should be null for an invalid certification https URL and throw exception in console",
                result);
    }
}
