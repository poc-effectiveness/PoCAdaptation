package edu.vision.se;

import org.jboss.netty.handler.codec.http.Cookie;
import org.jboss.netty.handler.codec.http.CookieDecoder;
import org.junit.Test;

import java.util.Iterator;
import java.util.Set;

import static org.junit.Assert.*;

public class Testcase1 {
    @Test(timeout = 60000)
    public void testDecodingClientSideCookies() {
        String source = "$Version=\"1\"; " +
                "Part_Number=\"Riding_Rocket_0023\"; $Path=\"/acme/ammo\"; " +
                "Part_Number=\"Rocket_Launcher_0001\"; $Path=\"/acme\"";

        Set<Cookie> cookies = new CookieDecoder().decode(source);
        Iterator<Cookie> it = cookies.iterator();
        Cookie c;
        c = it.next();
        assertEquals("Rocket_Launcher_0001", c.getValue());
        assertEquals(Integer.MIN_VALUE, c.getMaxAge());

        c = it.next();
        assertEquals("Riding_Rocket_0023", c.getValue());
        assertEquals(Integer.MIN_VALUE, c.getMaxAge());

        assertFalse(it.hasNext());
    }

    @Test(timeout = 60000)
    public void testDecodingCommaSeparatedClientSideCookies() {
        String source =
                "$Version=\"1\"; session_id=\"1234\", " +
                        "$Version=\"1\"; session_id=\"1111\"; $Domain=\".cracker.edu\"";

        Set<Cookie> cookies = new CookieDecoder().decode(source);
        Iterator<Cookie> it = cookies.iterator();
        Cookie c;

        assertTrue(it.hasNext());
        c = it.next();
        assertEquals("1234", c.getValue());
        assertEquals(Integer.MIN_VALUE, c.getMaxAge());

        assertTrue(it.hasNext());
        c = it.next();
        assertEquals("1111", c.getValue());
        assertEquals(Integer.MIN_VALUE, c.getMaxAge());

        assertFalse(it.hasNext());
    }
}
