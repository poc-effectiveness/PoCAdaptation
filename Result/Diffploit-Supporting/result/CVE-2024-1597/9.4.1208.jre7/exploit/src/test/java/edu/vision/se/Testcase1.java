package edu.vision.se;

import static org.junit.Assert.assertEquals;

import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

import org.junit.Before;
import org.junit.Test;

public class Testcase1 {
    private Object transferModeRegistry;

    @Before
    public void setUp() throws Exception {
        // Create a dummy object since TypeTransferModeRegistry is no longer available
        transferModeRegistry = new Object();
    }

    @Test
    public void mergeOfParameterLists() throws Exception {
        Class<?> SimpleParameterList = Class.forName("org.postgresql.core.v2.SimpleParameterList");
        Constructor<?> constructor = SimpleParameterList.getDeclaredConstructor(int.class,
                boolean.class);
        constructor.setAccessible(true);
        Object s1SPL = constructor.newInstance(4, false);
        Method setIntParameter_method = SimpleParameterList.getDeclaredMethod("setIntParameter", int.class, int.class);
        setIntParameter_method.setAccessible(true);
        setIntParameter_method.invoke(s1SPL, 1, 1);
        setIntParameter_method.invoke(s1SPL, 2, 2);
        setIntParameter_method.invoke(s1SPL, 3, 3);
        setIntParameter_method.invoke(s1SPL, 4, 4);

        Field paramValuesField = SimpleParameterList.getDeclaredField("paramValues");
        paramValuesField.setAccessible(true);
        Object[] paramValues = (Object[]) paramValuesField.get(s1SPL);

        StringBuilder ts = new StringBuilder("<[");
        if (paramValues.length > 0) {
            ts.append("('").append(paramValues[0].toString().trim()).append("'::int4)");
            for (int c = 1; c < paramValues.length; c++) {
                ts.append(" ,('").append(paramValues[c].toString().trim()).append("'::int4)");
            }
        }
        ts.append("]>");
        String result = ts.toString();
        validateReturnValue(result);
    }

    public void validateReturnValue(String result) {
        assertEquals("Expected string representation of values does not match outcome.",
                "<[('1'::int4) ,('2'::int4) ,('3'::int4) ,('4'::int4)]>",
                result);
    }
}
